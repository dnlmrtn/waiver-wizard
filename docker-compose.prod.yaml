version: '3'

services:
  db:
    image: postgres:16-alpine
    env_file:
      - .env.prod
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts:/scripts


  app:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
    command: >
          /bin/bash -c "
            cd /code/django;
            gunicorn -w 4 app.wsgi:application --bind 0.0.0.0:8000
          "
    env_file:
      - .env.prod
    volumes:
      - static_volume:/code/app/static
      - media_volume:/code/app/media
      - .:/code
    depends_on:
      - db
    logging:
      driver: "json-file"
      options:
          max-file: "5"
          max-size: "10m"

  redis:
    image: redis:alpine
    expose:
      - 6379
    logging:
      driver: "json-file"
      options:
          max-file: "5"
          max-size: "10m"

  celery:
    restart: always
    build:
      context: ./app
    command: [ "celery", "-A", "app", "worker", "--loglevel=info", "-E" ]
    volumes:
      - ./app:/app
    env_file:
      - .env.prod
    depends_on:
      - db
      - redis
      - app

  celery-beat:
    build: ./app
    command: [ "celery", "-A", "app", "beat", "--loglevel=info", "--pidfile=/tmp/celerybeat.pid", "--schedule=/tmp/celerybeat-schedule" ]
    volumes:
      - ./app:/app
    env_file:
      - .env.prod
    depends_on:
      - db
      - redis

  nginx:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.nginx
    image: nginx:alpine
    ports:
      - "80:80"
      - 443:443
    depends_on:
      - app
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

volumes:
  postgresdata:
