services:
  db:
    image: postgres:16-alpine
    env_file:
      - .env.prod
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts:/scripts
  app:
    build:
      context: ./app
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
    command: >
      sh -c '
      cd /app &&
      echo "Starting server" &&
      gunicorn --bind 0.0.0.0:8000 app.wsgi:application --reload
      '
    env_file:
      - .env.prod
    depends_on:
      - db
  redis:
    image: redis:alpine
    expose:
      - 6379
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  celery:
    restart: always
    build:
      context: ./app
    command: [ "celery", "-A", "app", "worker", "--loglevel=info", "-E" ]
    volumes:
      - ./app:/app
    env_file:
      - .env.prod
    depends_on:
      - db
      - redis
      - app

  celery-beat:
    build: ./app
    command: [ "celery", "-A", "app", "beat", "--loglevel=info", "--pidfile=/tmp/celerybeat.pid", "--schedule=/tmp/celerybeat-schedule" ]
    volumes:
      - ./app:/app
    env_file:
      - .env.prod
    depends_on:
      - db
      - redis

  nginx:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.nginx

    image: waiver-wizard-nginx:latest

    volumes:
      - static_volume:/code/app/static
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/letsencrypt

    ports:
      - "80:80"
      - "443:443"

    depends_on:
      - app

    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"


volumes:
  postgres_data:
  static_volume:

