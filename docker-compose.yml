version: '3'

services:
  app:
    build:
      context: ./app
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
    command: >
      sh -c "
            
            python3 manage.py wait_for_db &&
            python3 manage.py makemigrations &&
            python3 manage.py migrate &&
            python3 manage.py create_superuser &&
            python3 manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env.dev
    depends_on:
      - db

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/frontend
    environment:
      - SITE_URL=${SITE_URL}

  nginx:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.nginx
    image: nginx:alpine
    ports:
      - "80:80"
      - 443:443
    depends_on:
      - app
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  db:
    image: postgres:16-alpine
    env_file:
      - .env.dev
    ports:
      - "5432:5432"

  redis:
    image: redis:alpine

  celery:
    restart: always
    build:
      context: ./app
    command: [ "celery", "-A", "app", "worker", "--loglevel=info", "-E" ]
    volumes:
      - ./app:/app
    env_file:
      - .env.dev
    depends_on:
      - db
      - redis
      - app

  celery-beat:
    build: ./app
    command: [ "celery", "-A", "app", "beat", "--loglevel=info", "--pidfile=/tmp/celerybeat.pid", "--schedule=/tmp/celerybeat-schedule" ]
    volumes:
      - ./app:/app
    env_file:
      - .env.dev
    depends_on:
      - db
      - redis

volumes:
  pgdata:
